# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, SpeechBrain
# This file is distributed under the same license as the SpeechBrain
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpeechBrain \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-07 13:45+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../API/speechbrain.nnet.complex_networks.c_RNN.rst:5
msgid "speechbrain.nnet.complex_networks.c_RNN module"
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN:1
msgid "Library implementing complex-valued recurrent neural networks."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN:4
msgid "Authors"
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN:4
msgid "Titouan Parcollet 2020"
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_RNN.rst:16
msgid "Summary"
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_RNN.rst:18
msgid "Classes:"
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_RNN.rst:36:<autosummary>:1
msgid ":obj:`CLSTM <speechbrain.nnet.complex_networks.c_RNN.CLSTM>`"
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_RNN.rst:36:<autosummary>:1 of
#: speechbrain.nnet.complex_networks.c_RNN.CLSTM:1
msgid "This function implements a complex-valued LSTM."
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_RNN.rst:36:<autosummary>:1
msgid ":obj:`CLSTM_Layer <speechbrain.nnet.complex_networks.c_RNN.CLSTM_Layer>`"
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_RNN.rst:36:<autosummary>:1 of
#: speechbrain.nnet.complex_networks.c_RNN.CLSTM_Layer:1
msgid "This function implements complex-valued LSTM layer."
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_RNN.rst:36:<autosummary>:1
msgid ":obj:`CLiGRU <speechbrain.nnet.complex_networks.c_RNN.CLiGRU>`"
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_RNN.rst:36:<autosummary>:1 of
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU:1
msgid "This function implements a complex-valued Light GRU (liGRU)."
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_RNN.rst:36:<autosummary>:1
msgid ":obj:`CLiGRU_Layer <speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer>`"
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_RNN.rst:36:<autosummary>:1 of
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer:1
msgid "This function implements complex-valued Light-Gated Recurrent Unit layer."
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_RNN.rst:36:<autosummary>:1
msgid ":obj:`CRNN <speechbrain.nnet.complex_networks.c_RNN.CRNN>`"
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_RNN.rst:36:<autosummary>:1 of
#: speechbrain.nnet.complex_networks.c_RNN.CRNN:1
msgid "This function implements a vanilla complex-valued RNN."
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_RNN.rst:36:<autosummary>:1
msgid ":obj:`CRNN_Layer <speechbrain.nnet.complex_networks.c_RNN.CRNN_Layer>`"
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_RNN.rst:36:<autosummary>:1 of
#: speechbrain.nnet.complex_networks.c_RNN.CRNN_Layer:1
msgid "This function implements complex-valued recurrent layer."
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_RNN.rst:38
msgid "Reference"
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM:1
#: speechbrain.nnet.complex_networks.c_RNN.CLSTM_Layer:1
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU:1
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer:1
#: speechbrain.nnet.complex_networks.c_RNN.CRNN:1
#: speechbrain.nnet.complex_networks.c_RNN.CRNN_Layer:1
msgid "Bases: :class:`torch.nn.modules.module.Module`"
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM:3
#: speechbrain.nnet.complex_networks.c_RNN.CRNN:3
msgid ""
"Input format is (batch, time, fea) or (batch, time, fea, channel). In the"
" latter shape, the two last dimensions will be merged: (batch, time, fea "
"* channel)"
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM
#: speechbrain.nnet.complex_networks.c_RNN.CLSTM.forward
#: speechbrain.nnet.complex_networks.c_RNN.CLSTM_Layer
#: speechbrain.nnet.complex_networks.c_RNN.CLSTM_Layer.forward
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU.forward
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer.forward
#: speechbrain.nnet.complex_networks.c_RNN.CRNN
#: speechbrain.nnet.complex_networks.c_RNN.CRNN.forward
#: speechbrain.nnet.complex_networks.c_RNN.CRNN_Layer
#: speechbrain.nnet.complex_networks.c_RNN.CRNN_Layer.forward
msgid "Parameters"
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM:7
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU:18
#: speechbrain.nnet.complex_networks.c_RNN.CRNN:7
msgid ""
"Number of output neurons (i.e, the dimensionality of the output). "
"Specified value is in term of complex-valued neurons. Thus, the output is"
" 2*hidden_size."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM:11
#: speechbrain.nnet.complex_networks.c_RNN.CLSTM_Layer:9
#: speechbrain.nnet.complex_networks.c_RNN.CRNN:11
#: speechbrain.nnet.complex_networks.c_RNN.CRNN_Layer:9
msgid "Number of layers to employ in the RNN architecture (default 1)."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM:13
#: speechbrain.nnet.complex_networks.c_RNN.CRNN:15
msgid "If True, the additive bias b is adopted (default True)."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM:15
#: speechbrain.nnet.complex_networks.c_RNN.CLSTM_Layer:11
#: speechbrain.nnet.complex_networks.c_RNN.CRNN:17
#: speechbrain.nnet.complex_networks.c_RNN.CRNN_Layer:13
msgid "It is the dropout factor (must be between 0 and 1) (default 0.0)."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM:17
msgid "It True, the function returns the last hidden layer."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM:19
#: speechbrain.nnet.complex_networks.c_RNN.CLSTM_Layer:13
#: speechbrain.nnet.complex_networks.c_RNN.CRNN:21
#: speechbrain.nnet.complex_networks.c_RNN.CRNN_Layer:15
msgid ""
"If True, a bidirectioal model that scans the sequence both right-to-left "
"and left-to-right is used (default False)."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM:22
#: speechbrain.nnet.complex_networks.c_RNN.CLSTM_Layer:16
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU:39
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer:22
#: speechbrain.nnet.complex_networks.c_RNN.CRNN:24
#: speechbrain.nnet.complex_networks.c_RNN.CRNN_Layer:18
msgid ""
"(glorot, he). This parameter controls the initialization criterion of the"
" weights. It is combined with weights_init to build the initialization "
"method of the complex-valued weights (default \"glorot\")."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM:27
#: speechbrain.nnet.complex_networks.c_RNN.CLSTM_Layer:21
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU:44
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer:27
#: speechbrain.nnet.complex_networks.c_RNN.CRNN:29
#: speechbrain.nnet.complex_networks.c_RNN.CRNN_Layer:23
msgid ""
"(complex, unitary). This parameter defines the initialization procedure "
"of the complex-valued weights (default \"complex\"). \"complex\" will "
"generate random complex-valued weights following the init_criterion and "
"the complex polar form. \"unitary\" will normalize the weights to lie on "
"the unit circle. More details in: \"Deep Complex Networks\", Trabelsi C. "
"et al."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM:36
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU:53
#: speechbrain.nnet.complex_networks.c_RNN.CRNN:38
msgid "Example"
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM.forward:1
msgid "Returns the output of the CLSTM."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM.forward:3
#: speechbrain.nnet.complex_networks.c_RNN.CLSTM_Layer.forward:3
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU.forward:3
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer.forward:3
#: speechbrain.nnet.complex_networks.c_RNN.CRNN_Layer.forward:3
msgid "Input tensor."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM_Layer:3
#: speechbrain.nnet.complex_networks.c_RNN.CRNN_Layer:3
msgid "Feature dimensionality of the input tensors (in term of real values)."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM_Layer:5
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer:5
#: speechbrain.nnet.complex_networks.c_RNN.CRNN_Layer:5
msgid "Batch size of the input tensors."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM_Layer:7
#: speechbrain.nnet.complex_networks.c_RNN.CRNN_Layer:7
msgid "Number of output values (in term of real values)."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLSTM_Layer.forward:1
#: speechbrain.nnet.complex_networks.c_RNN.CRNN_Layer.forward:1
msgid "Returns the output of the CRNN_layer."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CRNN:13
#: speechbrain.nnet.complex_networks.c_RNN.CRNN_Layer:11
msgid "Type of nonlinearity (tanh, relu) (default \"tanh\")."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CRNN:19
msgid "It True, the function returns the last hidden layer (default False)."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CRNN.forward:1
msgid "Returns the output of the vanilla CRNN."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLiGRU:3
msgid ""
"Ligru is single-gate GRU model based on batch-norm + relu activations + "
"recurrent dropout. For more info see:"
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLiGRU:6
msgid ""
"\"M. Ravanelli, P. Brakel, M. Omologo, Y. Bengio, Light Gated Recurrent "
"Units for Speech Recognition, in IEEE Transactions on Emerging Topics in "
"Computational Intelligence, 2018\" (https://arxiv.org/abs/1803.10225)"
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLiGRU:11
msgid ""
"To speed it up, it is compiled with the torch just-in-time compiler (jit)"
" right before using it."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLiGRU:14
msgid ""
"It accepts in input tensors formatted as (batch, time, fea). In the case "
"of 4d inputs like (batch, time, fea, channel) the tensor is flattened as "
"(batch, time, fea*channel)."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLiGRU:22
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer:11
msgid "Type of nonlinearity (tanh, relu)."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLiGRU:24
msgid ""
"Type of normalization for the ligru model (batchnorm, layernorm). Every "
"string different from batchnorm and layernorm will result in no "
"normalization."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLiGRU:28
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer:9
msgid "Number of layers to employ in the RNN architecture."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLiGRU:30
msgid "If True, the additive bias b is adopted."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLiGRU:32
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer:17
msgid "It is the dropout factor (must be between 0 and 1)."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLiGRU:34
msgid "If True, the function returns the last hidden layer."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLiGRU:36
#: speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer:19
msgid ""
"If True, a bidirectioal model that scans the sequence both right-to-left "
"and left-to-right is used."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLiGRU.forward:1
msgid "Returns the output of the CliGRU."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer:3
msgid "Feature dimensionality of the input tensors."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer:7
msgid "Number of output values."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer:13
msgid ""
"Type of normalization (batchnorm, layernorm). Every string different from"
" batchnorm and layernorm will result in no normalization."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_RNN.CLiGRU_Layer.forward:1
msgid "Returns the output of the Complex liGRU layer."
msgstr ""

