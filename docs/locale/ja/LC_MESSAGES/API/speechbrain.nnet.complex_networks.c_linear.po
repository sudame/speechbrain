# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, SpeechBrain
# This file is distributed under the same license as the SpeechBrain
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpeechBrain \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-07 13:45+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../API/speechbrain.nnet.complex_networks.c_linear.rst:5
msgid "speechbrain.nnet.complex_networks.c_linear module"
msgstr ""

#: of speechbrain.nnet.complex_networks.c_linear:1
msgid "Library implementing complex-valued linear transformation."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_linear:4
msgid "Authors"
msgstr ""

#: of speechbrain.nnet.complex_networks.c_linear:4
msgid "Titouan Parcollet 2020"
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_linear.rst:16
msgid "Summary"
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_linear.rst:18
msgid "Classes:"
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_linear.rst:31:<autosummary>:1
msgid ":obj:`CLinear <speechbrain.nnet.complex_networks.c_linear.CLinear>`"
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_linear.rst:31:<autosummary>:1
msgid ""
"This function implements a fully connected complex-valued linear layer: y"
" = Wx + b."
msgstr ""

#: ../../API/speechbrain.nnet.complex_networks.c_linear.rst:33
msgid "Reference"
msgstr ""

#: of speechbrain.nnet.complex_networks.c_linear.CLinear:1
msgid "Bases: :class:`torch.nn.modules.module.Module`"
msgstr ""

#: of speechbrain.nnet.complex_networks.c_linear.CLinear:1
msgid ""
"This function implements a fully connected complex-valued linear layer: y"
" = Wx + b. y, W, x and b are thus complex numbers. A complex number is "
"written as: r + xi. A tensor of complex numbers x = [batch, 32] can be "
"understood as [batch, 0:15] = R and [batch, 16:31] = Xi. Thus the "
"features dimension is cut in half (must be dividible by 2)."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_linear.CLinear
#: speechbrain.nnet.complex_networks.c_linear.CLinear.forward
msgid "Parameters"
msgstr ""

#: of speechbrain.nnet.complex_networks.c_linear.CLinear:8
msgid ""
"It is the number of output neurons (i.e, the dimensionality of the "
"output). Please note that these are complex-valued neurons. If 256 "
"neurons are specified, the output dimension will be 512."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_linear.CLinear:12
msgid "Expected size of the input."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_linear.CLinear:14
msgid "if True, the additive bias b is adopted."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_linear.CLinear:16
msgid ""
"(glorot, he). This parameter controls the initialization criterion of the"
" weights. It is combined with weights_init to build the initialization "
"method of the complex-valued weights (default \"glorot\")."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_linear.CLinear:21
msgid ""
"(complex, unitary). This parameter defines the initialization procedure "
"of the complex-valued weights (default \"complex\"). \"complex\" will "
"generate random complex-valued weights following the init_criterion and "
"the complex polar form. \"unitary\" will normalize the weights to lie on "
"the unit circle. More details in: \"Deep Complex Networks\", Trabelsi C. "
"et al."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_linear.CLinear:30
msgid "Example"
msgstr ""

#: of speechbrain.nnet.complex_networks.c_linear.CLinear.forward:1
msgid "Returns the linear transformation of input tensor."
msgstr ""

#: of speechbrain.nnet.complex_networks.c_linear.CLinear.forward:3
msgid "Input to transform linearly."
msgstr ""

