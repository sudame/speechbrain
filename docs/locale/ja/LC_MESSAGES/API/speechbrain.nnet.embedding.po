# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, SpeechBrain
# This file is distributed under the same license as the SpeechBrain
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SpeechBrain \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-07 13:45+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../API/speechbrain.nnet.embedding.rst:5
msgid "speechbrain.nnet.embedding module"
msgstr ""

#: of speechbrain.nnet.embedding:1
msgid "Library implementing embedding."
msgstr ""

#: of speechbrain.nnet.embedding:4
msgid "Authors"
msgstr ""

#: of speechbrain.nnet.embedding:4
msgid "Abdelwahab Heba 2020"
msgstr ""

#: ../../API/speechbrain.nnet.embedding.rst:16
msgid "Summary"
msgstr ""

#: ../../API/speechbrain.nnet.embedding.rst:18
msgid "Classes:"
msgstr ""

#: ../../API/speechbrain.nnet.embedding.rst:31:<autosummary>:1
msgid ":obj:`Embedding <speechbrain.nnet.embedding.Embedding>`"
msgstr ""

#: ../../API/speechbrain.nnet.embedding.rst:31:<autosummary>:1 of
#: speechbrain.nnet.embedding.Embedding:1
msgid "Computes an embedding x = wx."
msgstr ""

#: ../../API/speechbrain.nnet.embedding.rst:33
msgid "Reference"
msgstr ""

#: of speechbrain.nnet.embedding.Embedding:1
msgid "Bases: :class:`torch.nn.modules.module.Module`"
msgstr ""

#: of speechbrain.nnet.embedding.Embedding
#: speechbrain.nnet.embedding.Embedding.forward
msgid "Parameters"
msgstr ""

#: of speechbrain.nnet.embedding.Embedding:3
msgid "Size of the dictionary of embeddings."
msgstr ""

#: of speechbrain.nnet.embedding.Embedding:5
msgid "It is the dim of embedding (i.e, the dimensionality of the output)."
msgstr ""

#: of speechbrain.nnet.embedding.Embedding:7
msgid "Create non-trainable one-hot vector."
msgstr ""

#: of speechbrain.nnet.embedding.Embedding:9
msgid ""
"If consider_as_one_hot == True: consider the embedding as one_hot and use"
" blank_index as zero one_hot vector."
msgstr ""

#: of speechbrain.nnet.embedding.Embedding:14
msgid "Example"
msgstr ""

#: of speechbrain.nnet.embedding.Embedding.forward:1
msgid "Returns the embedding of input tensor."
msgstr ""

#: of speechbrain.nnet.embedding.Embedding.forward:3
msgid "Input to embed."
msgstr ""

